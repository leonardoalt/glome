- Update objects in parallel
- Use 2 quaternion as position/orientation representation
- Make world updates independent of FPS
- Transfer momentum on collision between objects (ships, flying spagetti monsters)
  - At least prevent them from intersecting, change their velocity away from one another
- Fix supernova appearance:
  - you can see the triangles (you must not)
  - you can see briefly see the other side when it is half size (you must not)
    - don't draw the opposite side to fix this
- Fix projectile appearance (it has a diagonal tear)
- Add collision to supernova
  - Kill player when collide, finishing the game
  - Show and register score, then ask to try again
- Bring code to C++11:
  - Always use "override"
  - Remove all new/delete
- Sort objects when drawing each viewport
- Kill flying spaghetti monsters
  - When shot
  - When collide with supernova
  - Make some cool death animation
- Cull unseen objects
- Possibly use GLM for linear algebra

===================================================

Main topics:
- Physics
- Special effects
- Multiplayer
- Improve ship file format and exporter
- To model more ships

Visual:
- Make the colors of the shots random and moving

Optimization:
- There are lots of unecessary allocations/deallocations, including in
camera history (STL containers). Remove them.

Game Mechanics:
- Add a shild that is depleted when shot
- Add a bar that measures canons heat, so fire rate is slower when hot,
and halt when too hot;

Menu:

- Create options to configure.
- Stash options and load them at startup.
- Enhance ugly guichan buttons.

